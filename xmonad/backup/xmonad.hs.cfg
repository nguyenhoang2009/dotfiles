import XMonad
import Control.Monad
import XMonad.Hooks.DynamicLog
import XMonad.Hooks.ManageDocks
import XMonad.Hooks.SetWMName

import XMonad.Util.Run (spawnPipe)
import XMonad.Util.EZConfig (additionalKeys, additionalMouseBindings)
import XMonad.Util.SpawnOnce
import XMonad.Util.Loggers

import qualified XMonad.StackSet as W
import qualified Data.Map as M
import GHC.IO.Handle.Types as H

import XMonad.Layout.Spacing
import XMonad.Layout.Fullscreen
import XMonad.Layout.NoBorders
import XMonad.Layout.ResizableTile
import XMonad.Layout.WindowArranger

import XMonad.Actions.CycleWS (prevWS, nextWS)

import System.IO

i = " ^i(/home/xluffy/.xmonad/xbm/"

myws :: [String]

myws = clickable $ [ i ++ "term.xbm) TERM "
								   , i ++ "work.xbm) WEB "
								   , i ++ "term.xbm) INFO "
								   , i ++ "code.xbm) FILE "
								   , i ++ "chat.xbm) WORK "
		   						 ]
       where clickable l = [ "^ca(1,xdotool key super+" 
												   ++ show (n) ++ ")" ++ ws ++ "^ca()" |
												   (i,ws) <- zip [1..] l,
												   let n = i ]

mkeys =	[ ((mod4Mask, xK_Return), spawn "urxvt")
	, ((mod4Mask, xK_Left), prevWS)
	, ((mod4Mask, xK_Right), nextWS)
	, ((mod4Mask, xK_Up), sendMessage MirrorExpand)
	, ((mod4Mask, xK_Down), sendMessage MirrorShrink)
	, ((mod4Mask, xK_r), spawn "dmenu_run -b")
	, ((mod4Mask .|. shiftMask, xK_r), spawn "killall dzen2 && xmonad --restart")
	-- sound and others --
	, ((mod4Mask .|. mod1Mask, xK_Up), spawn "amixer set Master 5%+")
	, ((mod4Mask .|. mod1Mask, xK_Down), spawn "amixer set Master 5%-")
	, ((0, xK_F9), spawn "mpc toggle")
	, ((0, xK_F11), spawn "mpc prev")
	, ((0, xK_F12), spawn "mpc next")
	, ((modm .|. controlMask              , xK_s    ), sendMessage  Arrange         )
        , ((modm .|. controlMask .|. shiftMask, xK_s    ), sendMessage  DeArrange       )
        , ((modm .|. controlMask              , xK_Left ), sendMessage (MoveLeft      10))
        , ((modm .|. controlMask              , xK_Right), sendMessage (MoveRight     10))
        , ((modm .|. controlMask              , xK_Down ), sendMessage (MoveDown      10))
        , ((modm .|. controlMask              , xK_Up   ), sendMessage (MoveUp        10))
        , ((modm                 .|. shiftMask, xK_Left ), sendMessage (IncreaseLeft  10))
        , ((modm                 .|. shiftMask, xK_Right), sendMessage (IncreaseRight 10))
        , ((modm                 .|. shiftMask, xK_Down ), sendMessage (IncreaseDown  10))
        , ((modm                 .|. shiftMask, xK_Up   ), sendMessage (IncreaseUp    10))
        , ((modm .|. controlMask .|. shiftMask, xK_Left ), sendMessage (DecreaseLeft  10))
        , ((modm .|. controlMask .|. shiftMask, xK_Right), sendMessage (DecreaseRight 10))
        , ((modm .|. controlMask .|. shiftMask, xK_Down ), sendMessage (DecreaseDown  10))
        , ((modm .|. controlMask .|. shiftMask, xK_Up   ), sendMessage (DecreaseUp    10))
	] where modm = mod4Mask

main = do
	xmonad $ defaultConfig
				{
 				modMask = mod4Mask
 				, focusedBorderColor = "#b84130"
 				, normalBorderColor = "#02151B"
 				, borderWidth = 2
 				, workspaces = myws
 				, terminal = "urxvt"
 				} `additionalKeys` mkeys
